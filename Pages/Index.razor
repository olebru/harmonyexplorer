@page "/"
<div class="h-screen py-0 antialiased leading-tight min-h-full">
        <button class="focus:outline-none py-1 px-1 align-self-end w-full border-0 text-right text-xs text-blue-500" 
        @onclick="@ToggleMenu">@(ShowMenu? "Hide" : "Show" )</button>

        @if (ShowMenu && drillDownToChord == null)
        {
                 <div class="grid grid-cols-12 gap-1 py-1 px-1">
                     
                        @foreach (var rootNote in Helpers.AllRealNotes)
                        {
                                <button class="focus:outline-none w-full py-1 border-0 rounded text-xs md:text-sm lg:text-base @((rootNote.Name.Contains(currentRoot.Name) && currentRoot.Name.Length > 1) || (rootNote.Name == currentRoot.Name) 
                                ? 
                                "bg-blue-700 text-blue-200" : "bg-blue-200 text-blue-700")"
                                @onclick="@(() => ChangeKey(rootNote))">@rootNote.Name</button>
                        }     
                </div>

                <div class="grid grid-cols-5 gap-1 py-1 px-1">
                      
                        @foreach (var extension in Helpers.AllExtensions)
                        {
                                <button class="focus:outline-none w-full border-0 py-1 rounded text-xs md:text-sm lg:text-base @(upperExtensions == extension 
                                ? 
                                "bg-blue-700 text-blue-200" : "bg-blue-200 text-blue-700")" 
                                @onclick="@(() => ChangeExtensions(extension))">@extension</button>
                        }
                       
                </div>
                <div class="grid grid-cols-7 gap-1 py-1 px-1">
                       
                        @foreach (var mode in Helpers.AllModes)
                        {
                                <button class="focus:outline-none w-full border-0  py-1 rounded text-xs md:text-sm lg:text-base @(ModesToShow.Contains(mode) 
                                ? 
                                "bg-blue-700 text-blue-200" : "bg-blue-200 text-blue-700")"
                                @onclick="@(() => ToggleMode(mode))">@mode</button>
                        }
                     
                </div>
               
        }

        @if (drillDownToChord != null)
        {
                <div class = "bg-blue-300 text-blue-900 rounded"> @drillDownToChord.PlainTextChord(drillDownToChordExtension)</div> 

 <button class=" bg-blue-100 text-blue-900 py-0 px-0 w-full focus:outline-none text-xs md:text-sm lg:text-base" @onclick="@(() => DrillDownChord(null))">Close</button> 
        }
<!-- Main chord grid -->



        <div class="grid grid-cols-7">                         
                @foreach (var headerText in headerValues)
                        {
                                <button class="text-left font-bold bg-blue-100 text-blue-900 py-0 px-0 w-full focus:outline-none text-xs md:text-sm lg:text-base">@headerText</button>
                        }
        </div>            
                @foreach (var modeList in data)
                {      
                        <button class="text-left font-bold bg-blue-100 text-blue-500 py-1 px-0 w-full focus:outline-none text-xs md:text-sm lg:text-base">@modeList[0].Mode</button>
                
                        @for (int extensionInt = 0; extensionInt < (int)(upperExtensions) + 1; extensionInt++)
                        {
                                @foreach (var modeWithChords in modeList)
                                { 
                                        <div class = "grid grid-cols-7">
                                                @foreach (var chord in modeWithChords.Chords)
                                                {
                                                     <button class="text-left bg-blue-100 text-blue-900 py-0 px-0 w-full focus:outline-none text-xs md:text-sm lg:text-base" @onclick="@(() => DrillDownChord(chord))">@chord.PlainTextChord((UpperExtensionEnum)extensionInt)</button> 
                                                }
                                        </div>                             
                                }
                        }
                }  
        <div class="text-blue-500 text-right px-1 py-2 text-xs">Preview, work in progress. - Ole Idar Bruvik 2020</div>
</div>
