<div class="fixed inset-0 w-screen h-screen bg-blue-600 bg-opacity-25 @(chord.ShowDetails ? "" : "hidden")" />
<div class="fixed rounded inset-0 flex items-center justify-center @(chord.ShowDetails ? "" : "hidden")">
    <div class="w-full h-full sm:w-2/4 sm:h-auto p-1 bg-opacity-100 bg-blue-100 rounded fixed shadow-lg text-blue-700">
        <div class="inline-flex font-bold">
            <div class=>@chord.PlainTextChordWithOutModifiers(@chord.IncludedExtensions)</div>
            <div class="text-sm">@chord.Modifiers(@chord.IncludedExtensions)</div>
        </div>
       <div class="py-1">Parts :
        <div class="grid grid-cols-7 gap-4">
             
            @foreach (var ext in Helpers.AllExtensions)
            {
                int rootOffset = Array.IndexOf(chord.NoteNamesInOriginScale, chord.NoteNamesInOriginScale.Single(n => n.Name
                == chord.RootName));
                if ((int)ext <= (int)chord.IncludedExtensions)
                {
                    switch (ext)
                    {
                        case UpperExtensionEnum.Triads:
                            <div>1: @chord.NoteNamesInOriginScale[(1 + rootOffset -1) % (chord.NoteNamesInOriginScale.Length)].Name
                            </div>
                            <div>3: @chord.NoteNamesInOriginScale[(3+ rootOffset -1) % (chord.NoteNamesInOriginScale.Length)].Name
                            </div>
                            <div>5: @chord.NoteNamesInOriginScale[(5 + rootOffset -1) % (chord.NoteNamesInOriginScale.Length)].Name
                            </div>
                            break;
                        case UpperExtensionEnum.Sevenths:
                            <div>7: @chord.NoteNamesInOriginScale[(7 + rootOffset -1) % (chord.NoteNamesInOriginScale.Length)].Name
                            </div>
                            break;
                        case UpperExtensionEnum.Ninths:
                            <div>9: @chord.NoteNamesInOriginScale[(9 + rootOffset -1) % (chord.NoteNamesInOriginScale.Length)].Name
                            </div>
                            break;
                        case UpperExtensionEnum.Ellevenths:
                            <div>11: @chord.NoteNamesInOriginScale[(11 + rootOffset - 1) % (chord.NoteNamesInOriginScale.Length)].Name
                            </div>
                            break;
                        case UpperExtensionEnum.Thirteenths:
                            <div>13: @chord.NoteNamesInOriginScale[(13 + rootOffset- 1) % (chord.NoteNamesInOriginScale.Length)].Name
                            </div>
                            break;
                    }
                }
            }
        </div>
        </div>

        <div class="text-xs text-grey-500">
            Testing of drilldown to chord. For now only showing all notes to build chord. <br> Plans? 5o5, how to get to
            this chord, common subs etc.
        </div>
        <button
            class="focus:outline-none px-2 py-1 border-0 rounded text-xs md:text-sm lg:text-base bg-blue-200 text-blue-700"
            @onclick="Close">Close</button>
    </div>
</div>
